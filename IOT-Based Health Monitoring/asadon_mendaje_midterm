/* 

References:

For Alcohol Sensor:
https://lastminuteengineers.com/mq3-alcohol-sensor-arduino-tutorial/

For Pulse Sensor:
https://lastminuteengineers.com/pulse-sensor-arduino-tutorial/

*/

#define BLYNK_TEMPLATE_ID "TMPL6NI1waMtl"
#define BLYNK_TEMPLATE_NAME "HeartRate"
#define BLYNK_AUTH_TOKEN "3riN5urYAZJg60WSVXn_X_W7oyhK86uC"
#define BLYNK_PRINT Serial

#include <Arduino.h>
#include <WiFi.h>
#include <WiFiClient.h>
#include <BlynkSimpleEsp32.h>

char auth[] = "3riN5urYAZJg60WSVXn_X_W7oyhK86uC";
char ssid[] = "Galaxy A52s 5G35BA";
char pass[] = "hahaha1234";



int alcoholSensor = 36;
int pulseSensor = 39;
int bpm;
int pulseValue;
#define Sober 730  // Define max value that we consider sober
#define Drunk 900   // Define min value that we consider drunk
float sensorValue;  //variable to store sensor value

//....
#include <Wire.h>
#include "MAX30105.h"
#include "heartRate.h"


MAX30105 particleSensor;

const byte RATE_SIZE = 4; //Increase this for more averaging. 4 is good.
byte rates[RATE_SIZE]; //Array of heart rates
byte rateSpot = 0;
long lastBeat = 0; //Time at which the last beat occurred
float beatsPerMinute;
int beatAvg;
int samp;
//....


void setup()
 {
  // Start the serial communication
  Serial.begin(9600);

  // Connect to WiFi
  WiFi.begin(ssid, pass);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");

  // Connect to Blynk
  Blynk.begin(auth, ssid, pass);
  while (!Blynk.connected()) {
    Serial.println("Connecting to Blynk...");
    delay(1000);
  }
  Serial.println("Connected to Blynk");

  // Set up the pulse sensor
  pinMode(pulseSensor, INPUT);
  pinMode(alcoholSensor, INPUT);
  Serial.println("MQ3 warming up!");
	delay(10000); // allow the MQ3 to warm up

    //...
  Blynk.begin(auth, ssid, pass, "blynk.cloud", 80);
  // ---------------
  // pinMode(pulsePin, INPUT);
  // ---------------
  // Initialize sensor
  if (!particleSensor.begin(Wire, I2C_SPEED_FAST)) //Use default I2C port, 400kHz speed
  {
    Serial.println("MAX30105 was not found. Please check wiring/power. ");
    while (1);
  }
  Serial.println("Place your index finger on the sensor with steady pressure.");

  particleSensor.setup(); //Configure sensor with default settings
  particleSensor.setPulseAmplitudeRed(0x0A); //Turn Red LED to low to indicate sensor is running
  particleSensor.setPulseAmplitudeGreen(0); //Turn off Green LED
  //...
}

void loop() {

  Blynk.run();

int sensorValue = analogRead(alcoholSensor); // read analog input pin 0
  sensorValue = map(sensorValue, 0, 1023, 0, 255);

	Serial.print("Sensor Value: ");
	Serial.print(sensorValue);
	
	// Determine the status
	if (sensorValue < Sober) {
		Serial.println("  |  Status: Stone Cold Sober");
    Blynk.virtualWrite(V5, sensorValue);
	} else if (sensorValue >= Sober && sensorValue < Drunk) {
		Serial.println("  |  Status: Drinking but within legal limits");
        Blynk.virtualWrite(V5, sensorValue);
	} else {
		Serial.println("  |  Status: DRUNK");
    Blynk.virtualWrite(V5, sensorValue);

	}
	
	delay(400); 

  //Pulse

 pulseValue = analogRead(pulseSensor);

  // Detect the pulse
  if (pulseValue > 600) {
    delay(100); // wait for a short time
    bpm = 60000 / pulseValue; // calculate the heart rate in beats per minute
    Serial.print("Heart rate: ");
    Serial.print(bpm);
    Serial.println(" BPM");

    // Send the heart rate to Blynk
    Blynk.virtualWrite(V6, bpm);
    delay(200);

    // Print the heart rate on the serial monitor
    String message = "Pulse rate: " + String(bpm) + " BPM";
    Serial.println(message);


     //...
  long irValue = particleSensor.getIR();

  if (checkForBeat(irValue) == true)
  {
    //We sensed a beat!
    long delta = millis() - lastBeat;
    lastBeat = millis();

    beatsPerMinute = 60 / (delta / 1000.0);

    if (beatsPerMinute < 255 && beatsPerMinute > 20)
    {
      rates[rateSpot++] = (byte)beatsPerMinute; //Store this reading in the array
      rateSpot %= RATE_SIZE; //Wrap variable

      //Take average of readings
      beatAvg = 0;
      for (byte x = 0 ; x < RATE_SIZE ; x++)
        beatAvg += rates[x];
      beatAvg /= RATE_SIZE;
    }
  }

  Serial.print("IR=");
  Serial.print(irValue);
  Serial.print(", BPM=");
  Serial.print(beatsPerMinute);
  Serial.print(", Avg BPM=");
  Serial.print(beatAvg);

  if (irValue < 50000)
    Serial.print(" No finger?");

  Serial.println();

  samp = 6000000 / irValue;
  Blynk.virtualWrite(V7, samp);
  delay(500);
  Serial.print(samp);
  Serial.println();
  //...
  }


}
